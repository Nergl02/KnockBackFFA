package cz.nerkub.NerKubKnockBackFFA.Events;

import cz.nerkub.NerKubKnockBackFFA.Items.KnockBackStickItem;
import cz.nerkub.NerKubKnockBackFFA.NerKubKnockBackFFA;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.event.Event;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.scheduler.BukkitRunnable;

import java.util.HashMap;
import java.util.Map;

public class NoKnockBackStickEvent extends Event implements Listener {

	private static final HandlerList handlers = new HandlerList();
	private final NerKubKnockBackFFA plugin;
	private final Map<Player, Boolean> hadKnockBackStick = new HashMap<>();
	private final KnockBackStickItem knockBackStickItem;
	private boolean eventActive = true; // Flag pro aktivn√≠ event

	public NoKnockBackStickEvent(NerKubKnockBackFFA plugin, KnockBackStickItem knockBackStickItem) {
		this.plugin = plugin;
		this.knockBackStickItem = knockBackStickItem;

		// üìú Naƒçten√≠ zpr√°v z `events.yml`
		String startMessage = ChatColor.translateAlternateColorCodes('&', plugin.getEvents().getConfig().getString("events.no-knockback-stick.message-start"));
		String endMessage = ChatColor.translateAlternateColorCodes('&', plugin.getEvents().getConfig().getString("events.no-knockback-stick.message-end"));

		Bukkit.broadcastMessage(startMessage);
		Bukkit.getPluginManager().registerEvents(this, plugin);

		// Odebr√°n√≠ KnockBack Stick≈Ø hr√°ƒç≈Øm
		for (Player player : Bukkit.getOnlinePlayers()) {
			removeKnockBackStick(player);
		}

		// ‚è≥ ƒåas trv√°n√≠ eventu
		int duration = plugin.getEvents().getConfig().getInt("event-settings.event-duration");

		// üïí Napl√°nov√°n√≠ n√°vratu KnockBack Stick≈Ø po konci eventu
		new BukkitRunnable() {
			@Override
			public void run() {
				eventActive = false; // Deaktivace eventu
				restoreKnockBackStick();
				Bukkit.broadcastMessage(endMessage);
				plugin.getCustomEventManager().setCurrentEvent(null); // Ukonƒçen√≠ eventu
			}
		}.runTaskLater(plugin, duration * 20L); // P≈ôevod sekund na ticky
	}

	private void removeKnockBackStick(Player player) {
		ItemStack[] contents = player.getInventory().getContents();
		for (int i = 0; i < contents.length; i++) {
			ItemStack item = contents[i];
			if (item != null && item.getType() == Material.STICK) {
				// Ovƒõ≈ô√≠me, zda jde o KnockBack Stick
				if (item.getItemMeta() != null &&
						item.getItemMeta().getDisplayName().equals(ChatColor.translateAlternateColorCodes('&',
								plugin.getItems().getConfig().getString("knockback-stick.display-name")))) {
					player.getInventory().setItem(i, null); // Odstranƒõn√≠
					hadKnockBackStick.put(player, true); // Ulo≈æen√≠, ≈æe hr√°ƒç mƒõl stick
				}
			}
		}
		player.updateInventory();
	}

	private void restoreKnockBackStick() {
		for (Player player : hadKnockBackStick.keySet()) {
			if (hadKnockBackStick.get(player)) {
				player.getInventory().addItem(knockBackStickItem.createKnockBackStickItem()); // Vr√°cen√≠ Sticku
			}
		}
		hadKnockBackStick.clear(); // Vyƒçi≈°tƒõn√≠ mapy po eventu
	}

	// üèÜ Pokud se hr√°ƒç p≈ôipoj√≠ bƒõhem eventu, dostane KnockBack Stick zpƒõt po skonƒçen√≠
	@org.bukkit.event.EventHandler
	public void onPlayerJoin(PlayerJoinEvent event) {
		if (eventActive) {
			Player player = event.getPlayer();
			hadKnockBackStick.put(player, true); // Oznaƒçen√≠, ≈æe hr√°ƒç by mƒõl dostat Stick zpƒõt
			removeKnockBackStick(player); // Odebr√°n√≠ KnockBack Sticku, pokud ho m√° p≈ôi joinu
		}
	}

	@Override
	public HandlerList getHandlers() {
		return handlers;
	}

	public static HandlerList getHandlerList() {
		return handlers;
	}
}
